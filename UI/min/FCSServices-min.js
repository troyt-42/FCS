function APIRegistryService(e){var t=[{Namespace:"/","Event Name":"test",id:0}],a=[{namespace:"/",eventname:"test",id:0,socket:e({ioSocket:io.connect("localhost:3000/")})}];return{readCurrentAPI:function(){return angular.copy(t)},registerNewAPI:function(c){for(var n=!1,o=0;o<a.length;o++)a[o].namespace===c.Namespace&&a[o].eventname===c["Event Name"]&&(n=!0);n?alert("API has already existed(Namespace: "+c.Namespace+"; Event Name: "+c["Event Name"]+")"):(c.id=t.length,t.push(c),a.push({namespace:c.Namespace,eventname:c["Event Name"],id:c.id,socket:e({ioSocket:io.connect("localhost:3000/"+("/"===c.Namespace?"":c.Namespace))})}))},retrieveSocket:function(e){for(var t=0;t<a.length;t++)if(a[t].namespace===e.Namespace&&a[t].eventname===e["Event Name"])return a[t].socket;return"API doesn't exist"},removeAPI:function(e){void 0!==e.id&&(t.splice(e.id,1),a.splice(e.id,1))}}}!function(){"use strict";function e(e){var t=io.connect("localhost:3000/");return e({ioSocket:t})}angular.module("FCS").factory("FCSSocket",e).factory("APIRegistryService",APIRegistryService),e.$inject=["socketFactory"],APIRegistryService.$inject=["socketFactory"]}();